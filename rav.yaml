scripts:
  server: cd C:/Users/emir_/PycharmProjects/ecommerce-app && python manage.py runserver
  migrate: cd C:/Users/emir_/PycharmProjects/ecommerce-app && python manage.py migrate
  freeze: venv/Scripts/python -m pip freeze
  watch: npx tailwindcss -i ./ecommerce_app/static/tailwind/tailwind-input.css -o ./ecommerce_app/static/css/output.css --watch
  installs:
    - venv/Scripts/pip-compile ecommerce_app/requirements/requirements.in -o ecommerce_app/requirements.txt
    - venv/Scripts/python -m pip install -r ecommerce_app/requirements.txt
    - npm install
  win_installs:
    - pip-compile ecommerce_app/requirements/requirements.in -o ecommerce_app/requirements.txt
    - python -m pip install -r ecommerce_app/requirements.txt
    - npm install
  win_freeze: python -m pip freeze
  vendor_pull:
    - rm -rf ecommerce_app/static/vendor
    - mkdir -p ecommerce_app/static/vendor/htmx/
    - mkdir -p ecommerce_app/static/vendor/flowbite/
    - curl -L https://unpkg.com/htmx.org@1.8.2 -o ./ecommerce_app/static/vendor/htmx/htmx.min.js
    - cp ./node_modules/flowbite/dist/flowbite.min.js ./ecommerce_app/static/vendor/flowbite/flowbite.min.js
  build: docker build -f Dockerfile -t micro-ecommerce .
  docker_dev: docker run --env-file .env-dev -p 8001:8000 --rm --name micro-ecommerce-dev -it micro-ecommerce
  docker_prod: docker run --env-file .env-prod -p 8002:8000 --rm --name micro-ecommerce-prod -it micro-ecommerce
  build_push:
    - docker build --platform=linux/amd64 -f Dockerfile -t codingforentrepreneurs/micro-ecommerce .
    - docker push codingforentrepreneurs/micro-ecommerce --all-tags
